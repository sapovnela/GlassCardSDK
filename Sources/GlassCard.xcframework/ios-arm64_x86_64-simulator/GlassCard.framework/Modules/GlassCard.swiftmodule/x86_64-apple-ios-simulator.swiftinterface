// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.1.2 effective-5.10 (swiftlang-6.1.2.1.2 clang-1700.0.13.5)
// swift-module-flags: -target x86_64-apple-ios18.5-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-experimental-feature DebugDescriptionMacro -enable-bare-slash-regex -module-name GlassCard
// swift-module-flags-ignorable:  -interface-compiler-version 6.1.2
import Swift
import SwiftUI
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
@_Concurrency.MainActor @preconcurrency public struct GlassEffectView<Content> : SwiftUICore.View where Content : SwiftUICore.View {
  @_Concurrency.MainActor @preconcurrency public init(cornerRadius: CoreFoundation.CGFloat = 20, opacity: Swift.Double = 0.1, blurRadius: CoreFoundation.CGFloat = 20, borderWidth: CoreFoundation.CGFloat = 0.5, shadowRadius: CoreFoundation.CGFloat = 10, shadowOpacity: Swift.Double = 0.1, @SwiftUICore.ViewBuilder content: () -> Content)
  @_Concurrency.MainActor @preconcurrency public var body: some SwiftUICore.View {
    get
  }
  public typealias Body = @_opaqueReturnTypeOf("$s9GlassCard0A10EffectViewV4bodyQrvp", 0) __<Content>
}
@_Concurrency.MainActor @preconcurrency public struct GlassCardView<Content> : SwiftUICore.View where Content : SwiftUICore.View {
  @_Concurrency.MainActor @preconcurrency public init(cornerRadius: CoreFoundation.CGFloat = 20, opacity: CoreFoundation.CGFloat = 0.15, padding: SwiftUICore.EdgeInsets = EdgeInsets(top: 20, leading: 20, bottom: 20, trailing: 20), @SwiftUICore.ViewBuilder content: () -> Content)
  @_Concurrency.MainActor @preconcurrency public var body: some SwiftUICore.View {
    get
  }
  public typealias Body = @_opaqueReturnTypeOf("$s9GlassCard0aB4ViewV4bodyQrvp", 0) __<Content>
}
@_Concurrency.MainActor @preconcurrency public struct GlassButton : SwiftUICore.View {
  @_Concurrency.MainActor @preconcurrency public init(_ title: Swift.String, icon: Swift.String? = nil, cornerRadius: CoreFoundation.CGFloat = 16, opacity: CoreFoundation.CGFloat = 0.15, horizontalPadding: CoreFoundation.CGFloat = 24, verticalPadding: CoreFoundation.CGFloat = 12, action: @escaping () -> Swift.Void)
  @_Concurrency.MainActor @preconcurrency public var body: some SwiftUICore.View {
    get
  }
  public typealias Body = @_opaqueReturnTypeOf("$s9GlassCard0A6ButtonV4bodyQrvp", 0) __
}
extension GlassCard.GlassEffectView : Swift.Sendable {}
extension GlassCard.GlassCardView : Swift.Sendable {}
extension GlassCard.GlassButton : Swift.Sendable {}
